<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Debian on RunThem</title><link>https://iccy.fun/tags/debian/</link><description>Recent content in Debian on RunThem</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 22 May 2022 18:12:44 +0800</lastBuildDate><atom:link href="https://iccy.fun/tags/debian/index.xml" rel="self" type="application/rss+xml"/><item><title>lsof 查看端口占用情况</title><link>https://iccy.fun/post/lsof-cha-kan-duan-kou-zhan-yong-qing-kuang/</link><pubDate>Sun, 22 May 2022 18:12:44 +0800</pubDate><guid>https://iccy.fun/post/lsof-cha-kan-duan-kou-zhan-yong-qing-kuang/</guid><description>作者: RunThem 未经允许, 禁止转载, 尤其 CSDN, 违者必究
Linux查看端口占用情况 在 Linux 使用过程中经常需要看看某个端口是由哪个进程占用了, 本文来记录以下Linux下 lsof 的常见用法
lsof lsof(list open files) 是一个列出当前系统打开文件的工具, 开源在 https://github.com/lsof-org/lsof.
lsof 查看端口占用语法格式:
1 lsof -i:{port} 实例 让我们来看以下 3000 端口的占用, 这是 gitea 默认的端口.
1 2 3 4 5 6 7 8 9 10 11 12 $ sudo lsof -i:3000 # lsof需要root权限哦 COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME gitea 848 gitea 13u IPv6 23025 0t0 TCP *:3000 (LISTEN) # COMMAND: 进程的名称 # PID: 进程标识符 # USER: 进程所有者 # FD: 文件描述符 # TYPE: 文件类型 # DEVICE: 指定磁盘的名称 # SIZE: 文件大小 # NODE: 索引节点 # NAME: 打开文件的确切名称 更多用法 1 2 3 4 5 6 7 8 9 lsof -i:8080 # 查看8080端口占用 lsof abc.</description></item><item><title>ncat 命令传输文件</title><link>https://iccy.fun/post/nc-ming-ling-chuan-shu-wen-jian/</link><pubDate>Fri, 11 Mar 2022 00:00:25 +0800</pubDate><guid>https://iccy.fun/post/nc-ming-ling-chuan-shu-wen-jian/</guid><description>作者: RunThem
未经允许, 禁止转载, 尤其 CSDN, 违者必究
nc - netcat netcat (nc是简写) 是用于在网络上读取, 写入, 重定向和加密数据的通用命令行工具. 它旨在成为您的瑞士军刀网络, 处理各种各样的安全测试和管理任务.
但是它比较旧, 一般使用它的升级版 ncat, ncat 它有着更多的功能, 尤其是与其他的命令组合起来是更为强大的, 但我只介绍它在局域网下传输文件的能力.
fix: 不用 nc 是它有个问题, 文件传输完成不会断开连接, 导致你无法判断文件是否传输完成.
起因是我的旧电脑上有很多的文件需要传到我的新电脑上, 有几个G那么大, 此时需要一个局域网下可以传输文件的包.
假设有两台电脑 A 和 B, A上有一个文件需要传递到 B 上.
传输方式有两种, 一种是上传, 另一种是下载, 这两种是没有区别的.
上传文件 将 A 当成客户端, B 当成服务器, 将文件上传到 B 上.
1 2 3 4 5 # A nc {{B.ip}} {{B.</description></item></channel></rss>